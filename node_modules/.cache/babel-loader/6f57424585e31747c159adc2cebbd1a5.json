{"ast":null,"code":"var _jsxFileName = \"/home/lnv146/React-query/udemy-REACT-QUERY/completed-apps/infinite-swapi/src/people/InfinitePeople.jsx\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { Person } from \"./Person\";\nconst initialUrl = \"https://swapi.dev/api/people/\";\nconst fetchUrl = async url => {\n  const response = await fetch(url);\n  return response.json();\n};\nexport function InfinitePeople() {\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n    isFetching,\n    isError,\n    error\n  } = useInfiniteQuery(\"sw-people\", _ref => {\n    let {\n      pageParam = initialUrl\n    } = _ref;\n    return fetchUrl(pageParam);\n  }, {\n    getNextPageParam: lastPage => lastPage.next || undefined\n  });\n  if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (isError) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"Error! \", error.toString());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isFetching && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    loadMore: fetchNextPage,\n    hasMore: hasNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, data.pages.map(pageData => {\n    return pageData.results.map(person => {\n      return /*#__PURE__*/React.createElement(Person, {\n        key: person.name,\n        name: person.name,\n        hairColor: person.hair_color,\n        eyeColor: person.eye_color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      });\n    });\n  })));\n}","map":{"version":3,"names":["InfiniteScroll","useInfiniteQuery","Person","initialUrl","fetchUrl","url","response","fetch","json","InfinitePeople","data","fetchNextPage","hasNextPage","isLoading","isFetching","isError","error","_ref","pageParam","getNextPageParam","lastPage","next","undefined","React","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toString","Fragment","loadMore","hasMore","pages","map","pageData","results","person","key","name","hairColor","hair_color","eyeColor","eye_color"],"sources":["/home/lnv146/React-query/udemy-REACT-QUERY/completed-apps/infinite-swapi/src/people/InfinitePeople.jsx"],"sourcesContent":["import InfiniteScroll from \"react-infinite-scroller\";\nimport { useInfiniteQuery } from \"react-query\";\n\nimport { Person } from \"./Person\";\n\nconst initialUrl = \"https://swapi.dev/api/people/\";\nconst fetchUrl = async (url) => {\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport function InfinitePeople() {\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isLoading,\n    isFetching,\n    isError,\n    error,\n  } = useInfiniteQuery(\n    \"sw-people\",\n    ({ pageParam = initialUrl }) => fetchUrl(pageParam),\n    {\n      getNextPageParam: (lastPage) => lastPage.next || undefined,\n    }\n  );\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n  if (isError) return <div>Error! {error.toString()}</div>;\n\n  return (\n    <>\n      {isFetching && <div className=\"loading\">Loading...</div>}\n      <InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage}>\n        {data.pages.map((pageData) => {\n          return pageData.results.map((person) => {\n            return (\n              <Person\n                key={person.name}\n                name={person.name}\n                hairColor={person.hair_color}\n                eyeColor={person.eye_color}\n              />\n            );\n          });\n        })}\n      </InfiniteScroll>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,cAAc,MAAM,yBAAyB;AACpD,SAASC,gBAAgB,QAAQ,aAAa;AAE9C,SAASC,MAAM,QAAQ,UAAU;AAEjC,MAAMC,UAAU,GAAG,+BAA+B;AAClD,MAAMC,QAAQ,GAAG,MAAOC,GAAG,IAAK;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,MAAM;IACJC,IAAI;IACJC,aAAa;IACbC,WAAW;IACXC,SAAS;IACTC,UAAU;IACVC,OAAO;IACPC;EACF,CAAC,GAAGf,gBAAgB,CAClB,WAAW,EACXgB,IAAA;IAAA,IAAC;MAAEC,SAAS,GAAGf;IAAW,CAAC,GAAAc,IAAA;IAAA,OAAKb,QAAQ,CAACc,SAAS,CAAC;EAAA,GACnD;IACEC,gBAAgB,EAAGC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,IAAIC;EACnD,CACF,CAAC;EAED,IAAIT,SAAS,EAAE,oBAAOU,KAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAe,CAAC;EAC/D,IAAIhB,OAAO,EAAE,oBAAOQ,KAAA,CAAAC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,SAAO,EAACf,KAAK,CAACgB,QAAQ,CAAC,CAAO,CAAC;EAExD,oBACET,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAU,QAAA,QACGnB,UAAU,iBAAIS,KAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAe,CAAC,eACxDR,KAAA,CAAAC,aAAA,CAACxB,cAAc;IAACkC,QAAQ,EAAEvB,aAAc;IAACwB,OAAO,EAAEvB,WAAY;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3DrB,IAAI,CAAC0B,KAAK,CAACC,GAAG,CAAEC,QAAQ,IAAK;IAC5B,OAAOA,QAAQ,CAACC,OAAO,CAACF,GAAG,CAAEG,MAAM,IAAK;MACtC,oBACEjB,KAAA,CAAAC,aAAA,CAACtB,MAAM;QACLuC,GAAG,EAAED,MAAM,CAACE,IAAK;QACjBA,IAAI,EAAEF,MAAM,CAACE,IAAK;QAClBC,SAAS,EAAEH,MAAM,CAACI,UAAW;QAC7BC,QAAQ,EAAEL,MAAM,CAACM,SAAU;QAAApB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAC5B,CAAC;IAEN,CAAC,CAAC;EACJ,CAAC,CACa,CAChB,CAAC;AAEP"},"metadata":{},"sourceType":"module"}